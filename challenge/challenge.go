package challenge

import (
	"fmt"
	"strconv"
	"strings"
	textscanner "text/scanner"
)

func DayOne() {
	input := "6592822488931338589815525425236818285229555616392928433262436847386544514648645288129834834862363847542262953164877694234514375164927616649264122487182321437459646851966649732474925353281699895326824852555747127547527163197544539468632369858413232684269835288817735678173986264554586412678364433327621627496939956645283712453265255261565511586373551439198276373843771249563722914847255524452675842558622845416218195374459386785618255129831539984559644185369543662821311686162137672168266152494656448824719791398797359326412235723234585539515385352426579831251943911197862994974133738196775618715739412713224837531544346114877971977411275354168752719858889347588136787894798476123335894514342411742111135337286449968879251481449757294167363867119927811513529711239534914119292833111624483472466781475951494348516125474142532923858941279569675445694654355314925386833175795464912974865287564866767924677333599828829875283753669783176288899797691713766199641716546284841387455733132519649365113182432238477673375234793394595435816924453585513973119548841577126141962776649294322189695375451743747581241922657947182232454611837512564776273929815169367899818698892234618847815155578736875295629917247977658723868641411493551796998791839776335793682643551875947346347344695869874564432566956882395424267187552799458352121248147371938943799995158617871393289534789214852747976587432857675156884837634687257363975437535621197887877326295229195663235129213398178282549432599455965759999159247295857366485345759516622427833518837458236123723353817444545271644684925297477149298484753858863551357266259935298184325926848958828192317538375317946457985874965434486829387647425222952585293626473351211161684297351932771462665621764392833122236577353669215833721772482863775629244619639234636853267934895783891823877845198326665728659328729472456175285229681244974389248235457688922179237895954959228638193933854787917647154837695422429184757725387589969781672596568421191236374563718951738499591454571728641951699981615249635314789251239677393251756396"
	sum := 0
	var scanner textscanner.Scanner
	scanner.Init(strings.NewReader(input))

	firstChar := input[0]
	lastChar := input[len(input)-1]

	if firstChar == lastChar {
		integer, _ := strconv.Atoi(string(firstChar))
		sum += integer
	}

	for tok := scanner.Next(); tok != textscanner.EOF; tok = scanner.Next() {
		if tok == scanner.Peek() {
			integer, _ := strconv.Atoi(string(tok))
			sum += integer
		}
	}

	fmt.Println("Sum is:", sum)

	// Part 2

	input2 := "6592822488931338589815525425236818285229555616392928433262436847386544514648645288129834834862363847542262953164877694234514375164927616649264122487182321437459646851966649732474925353281699895326824852555747127547527163197544539468632369858413232684269835288817735678173986264554586412678364433327621627496939956645283712453265255261565511586373551439198276373843771249563722914847255524452675842558622845416218195374459386785618255129831539984559644185369543662821311686162137672168266152494656448824719791398797359326412235723234585539515385352426579831251943911197862994974133738196775618715739412713224837531544346114877971977411275354168752719858889347588136787894798476123335894514342411742111135337286449968879251481449757294167363867119927811513529711239534914119292833111624483472466781475951494348516125474142532923858941279569675445694654355314925386833175795464912974865287564866767924677333599828829875283753669783176288899797691713766199641716546284841387455733132519649365113182432238477673375234793394595435816924453585513973119548841577126141962776649294322189695375451743747581241922657947182232454611837512564776273929815169367899818698892234618847815155578736875295629917247977658723868641411493551796998791839776335793682643551875947346347344695869874564432566956882395424267187552799458352121248147371938943799995158617871393289534789214852747976587432857675156884837634687257363975437535621197887877326295229195663235129213398178282549432599455965759999159247295857366485345759516622427833518837458236123723353817444545271644684925297477149298484753858863551357266259935298184325926848958828192317538375317946457985874965434486829387647425222952585293626473351211161684297351932771462665621764392833122236577353669215833721772482863775629244619639234636853267934895783891823877845198326665728659328729472456175285229681244974389248235457688922179237895954959228638193933854787917647154837695422429184757725387589969781672596568421191236374563718951738499591454571728641951699981615249635314789251239677393251756396"
	sum2 := 0
	var scanner2 textscanner.Scanner
	scanner2.Init(strings.NewReader(input2))

	indexGap := len(input2) / 2

	for index, token := range input2 {
		string1 := string(token)
		var index2 int
		if (index + indexGap) > (len(input2) - 1) {
			index2 = index + indexGap - len(input2)
		} else {
			index2 = index + indexGap
		}
		string2 := string(input2[index2])

		if string1 == string2 {
			integer, _ := strconv.Atoi(string1)
			sum2 += integer
		}
	}

	fmt.Println("Sum2 is:", sum2)
}

func DayTwo() {
	input := [][]int{}
	input = append(input, []int{121, 59, 141, 21, 120, 67, 58, 49, 22, 46, 56, 112, 53, 111, 104, 130})
	input = append(input, []int{1926, 1910, 760, 2055, 28, 2242, 146, 1485, 163, 976, 1842, 1982, 137, 1387, 162, 789})
	input = append(input, []int{4088, 258, 2060, 1014, 4420, 177, 4159, 194, 2794, 4673, 4092, 681, 174, 2924, 170, 3548})
	input = append(input, []int{191, 407, 253, 192, 207, 425, 580, 231, 197, 382, 404, 472, 164, 571, 500, 216})
	input = append(input, []int{4700, 1161, 168, 5398, 5227, 5119, 252, 2552, 4887, 5060, 1152, 3297, 847, 4525, 220, 262})
	input = append(input, []int{2417, 992, 1445, 184, 554, 2940, 209, 2574, 2262, 1911, 2923, 204, 2273, 2760, 506, 157})
	input = append(input, []int{644, 155, 638, 78, 385, 408, 152, 360, 588, 618, 313, 126, 172, 220, 217, 161})
	input = append(input, []int{227, 1047, 117, 500, 1445, 222, 29, 913, 190, 791, 230, 1281, 1385, 226, 856, 1380})
	input = append(input, []int{436, 46, 141, 545, 122, 86, 283, 124, 249, 511, 347, 502, 168, 468, 117, 94})
	input = append(input, []int{2949, 3286, 2492, 2145, 1615, 159, 663, 1158, 154, 939, 166, 2867, 141, 324, 2862, 641})
	input = append(input, []int{1394, 151, 90, 548, 767, 1572, 150, 913, 141, 1646, 154, 1351, 1506, 1510, 707, 400})
	input = append(input, []int{646, 178, 1228, 1229, 270, 167, 161, 1134, 193, 1312, 1428, 131, 1457, 719, 1288, 989})
	input = append(input, []int{1108, 1042, 93, 140, 822, 124, 1037, 1075, 125, 941, 1125, 298, 136, 94, 135, 711})
	input = append(input, []int{112, 2429, 1987, 2129, 2557, 1827, 477, 100, 78, 634, 352, 1637, 588, 77, 1624, 2500})
	input = append(input, []int{514, 218, 209, 185, 197, 137, 393, 555, 588, 569, 710, 537, 48, 309, 519, 138})
	input = append(input, []int{1567, 3246, 4194, 151, 3112, 903, 1575, 134, 150, 4184, 3718, 4077, 180, 4307, 4097, 1705})

	checksum := 0

	for _, row := range input {
		maxValue := 0
		minValue := 9999999

		for _, value := range row {
			if value > maxValue {
				maxValue = value
			}

			if value < minValue {
				minValue = value
			}
		}

		checksum += (maxValue - minValue)
	}

	fmt.Println("Checksum is:", checksum)

	// Part 2

	divisibleSums := 0

	for _, row := range input {
		for index, value := range row {
			for i := (index + 1); i < len(row); i++ {
				value2 := row[i]

				if (value % value2) == 0 {
					divisibleSums += (value / value2)
				}

				if (value2 % value) == 0 {
					divisibleSums += (value2 / value)
				}
			}
		}
	}

	fmt.Println("Divisible Sums is:", divisibleSums)
}
